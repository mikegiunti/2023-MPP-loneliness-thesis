Comfort = "1",
Relationship = "2",
Tech = "3",
Politics = "4",
Gaming = "5",
Crypto = "6")
) %>%
kable( format = "html", caption = "Table 8a. Topic Assignment - 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
kable_styling(full_width = FALSE, position = "float_left")
knitr::kable(tidysub_topictable_2018, format = "html", caption = "Table 7a. Topic Words for 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
knitr::kable(tidysub_topictable_2022, format = "html", caption = "Table 7b. Topic Words for 2022") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Comfort = "1",
Relationship = "2",
Tech = "3",
Politics = "4",
Gaming = "5",
Crypto = "6")
) %>%
kable(format = "html", caption = "Table 8a. Topic Assignment - 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
kable_styling(full_width = FALSE, position = "float_left")
knitr::kable(tidysub_topictable_2018, format = "html", caption = "Table 7a. Topic Words for 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
knitr::kable(tidysub_topictable_2022, format = "html", caption = "Table 7b. Topic Words for 2022") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Comfort = "1",
Relationship = "2",
Tech = "3",
Politics = "4",
Gaming = "5",
Crypto = "6")
) %>%
kable(format = "html", caption = "Table 8a. Topic Assignment - 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "float_left")
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Comfort = "1",
Relationship = "2",
Tech = "3",
Politics = "4",
Gaming = "5",
Crypto = "6")
)
ProbableTopicAssignment_2022 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Politics = "1",
Tech = "2",
Home = "3",
Crypto = "4",
Relationship = "5",
Emotion = "6")
ProbableTopicAssignment_2022 %>%
ProbableTopicAssignment_2022 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Politics = "1",
Tech = "2",
Home = "3",
Crypto = "4",
Relationship = "5",
Emotion = "6")
)
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Comfort = "1",
Relationship = "2",
Tech = "3",
Politics = "4",
Gaming = "5",
Crypto = "6")
)
tidysub_topictable_2018
ProbableTopicAssignment_2018
knitr::kable(tidysub_topictable_2018, format = "html", caption = "Table 7a. Topic Words for 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
knitr::kable(tidysub_topictable_2022, format = "html", caption = "Table 7b. Topic Words for 2022") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Relationship = "1",
Politics = "2",
Tech = "3",
Health = "4",
Emotion = "5",
Crypto = "6")
) %>%
kable(format = "html", caption = "Table 8a. Topic Assignment - 2018") %>%
column_spec(2, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "float_left")
ProbableTopicAssignment_2022 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Politics = "1",
Tech = "2",
Home = "3",
Crypto = "4",
Relationship = "5",
Emotion = "6")
) %>%
kable(format = "html", caption = "Table 8b. Topic Assingment - 2022") %>%
column_spec(2, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "left")
knitr::kable(tidysub_topictable_2018, format = "html", caption = "Table 7a. Topic Words for 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
knitr::kable(tidysub_topictable_2022, format = "html", caption = "Table 7b. Topic Words for 2022") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
ProbableTopicAssignment_2018 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Relationship = "1",
Politics = "2",
Tech = "3",
Health = "4",
Emotion = "5",
Crypto = "6")
) %>%
rename(Topic = topic, Assignment = Factor) %>%
kable(format = "html", caption = "Table 8a. Topic Assignment - 2018") %>%
column_spec(2, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "float_left")
ProbableTopicAssignment_2022 %>%
mutate(
Factor = fct_recode(as.factor(topic),
Politics = "1",
Tech = "2",
Home = "3",
Crypto = "4",
Relationship = "5",
Emotion = "6")
) %>%
rename(Topic = topic, Assignment = Factor) %>%
kable(format = "html", caption = "Table 8b. Topic Assingment - 2022") %>%
column_spec(2, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "left")
Table1Bing
Table2Bing
table3Bing
TotalSub_ncount_day
kable(Table2Bing, format = "html", caption = "Table 8b. Topic Assignment - 2022") %>%
column_spec(2, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = FALSE, position = "left")
table3Bing
Table2Bing %>%
mutate(Difference = positive - negative)
Table2Bing %>%
mutate(Difference_PositiveNegative = positive - negative)
Table2Bing %>%
mutate(Difference = positive - negative) %>%
rename(Subreddit = subreddit, Negative = negative, Positive = positive) %>%
reactable(columns = list(Positive = colDef(style = list(borderRight = "1px solid silver")), striped = TRUE, compact = TRUE, pagination = FALSE) %>%
add_title("Table 9. Share of Potive and Negative Feelings", font_size = 14))
Table2Bing %>%
mutate(Difference = positive - negative) %>%
rename(Subreddit = subreddit, Negative = negative, Positive = positive) %>%
reactable(columns = list(Positive = colDef(style = list(borderRight = "1px solid silver"))), striped = TRUE, compact = TRUE, pagination = FALSE) %>%
add_title("Table 9. Share of Potive and Negative Feelings", font_size = 14))
Table2Bing %>%
mutate(Difference = positive - negative) %>%
rename(Subreddit = subreddit, Negative = negative, Positive = positive) %>%
reactable(columns = list(Positive = colDef(style = list(borderRight = "1px solid silver"))), striped = TRUE, compact = TRUE, pagination = FALSE) %>%
add_title("Table 9. Share of Potive and Negative Feelings", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
formatC(format = "e", digits = 2) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
format(scientific = TRUE) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
format(scientific = TRUE) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
formatC(TermFrequency, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
formatC($TermFrequency, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
formatC(IDFTable2$TermFrequency, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf)
formatC(IDFTable2, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf)
formatC(TermFrequency, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf)
formatC(IDFTable2, format = "e", digits = 2)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(TermFrequency, scientific)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate_all(scientific)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate_all(is.numeric(scientific))
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(scientific(TermFrequency))
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(is.numeric(across(, scientific, digit = 1, nsmall = 3)))
IDFTable %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
reactable(filterable = TRUE,
columns = list(N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE,
style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 5. Most Unique Words by Subreddit", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
SubCommentYear %>%
pivot_longer(cols = addiction:YUROP, names_to ="Subreddit", values_to = "n") %>%
pivot_wider(names_from = "Year", values_from = "n") %>%
mutate(Change = (.[[3]] - .[[2]])/ .[[2]], Change = percent(Change, big.mark = ",")) %>%
reactable(columns = list(Subreddit = colDef(style = list(borderRight = "1px solid silver")), Change = colDef(align = "right")), striped = TRUE, compact = TRUE) %>%
add_title("Table 3. Subreddit Growth or Decline between 2018 and 2022", font_size = 14)
Top20Authors
top15 %>%
rename(Word = word, N = n) %>%
kable(format = "html", caption = "Table 4. Overall Top 15 Most Common Words") %>%
kable_styling(bootstrap_options = c("striped", "condensed"), full_width = F, position = "float_left")
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2022 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4. Most Common Words per Subreddit (2022)", font_size = 14)
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(dplyr)
library(tidyr)
library(plotly)
library(kableExtra)
library(reactable)
library(reactablefmtr)
library(scales)
library(forcats)
setwd("E:/Rdata")
load("env.RData")
IDFTable %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(across(where(is.numeric), round, 5))
IDFTable %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(across(where(is.numeric), round, 7)) %>%
reactable(filterable = TRUE,
columns = list(N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE,
style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 5. Most Unique Words by Subreddit", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(across(where(is.numeric), round, 7)) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 6. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 50)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 50), striped = TRUE, compact = TRUE)) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver"),
N = colDef(filterable = FALSE, maxWidth = 50), striped = TRUE, compact = TRUE))) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 50), striped = TRUE, compact = TRUE)) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE), striped = TRUE, compact = TRUE)) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE), striped = TRUE, compact = TRUE)) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE), striped = TRUE, compact = TRUE)) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 50)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
par(mfrow = c(1,2,3))
Table1Bing
Table2Bing %>%
mutate(Difference = positive - negative) %>%
rename(Subreddit = subreddit, Negative = negative, Positive = positive) %>%
reactable(columns = list(Subreddit = colDef(minWidth = 175), Positive = colDef(style = list(borderRight = "1px solid silver"))), striped = TRUE, compact = TRUE, pagination = FALSE, height = 400, fullWidth = FALSE) %>%
add_title("Table 9. Share of Potive and Negative Feelings", font_size = 14)
ggplotly(table3Bing)
?profanity_zac_anger
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, message = FALSE, warning = FALSE, root.dir = "~/Rdata")
library(tidyr)
library(dplyr)
library(tidylog)
library(readr)
library(stringr)
library(RColorBrewer)
library(ggthemes)
library(scales)
library(labeling)
library(RColorBrewer)
library(labelled)
library(tidytext)
library(tidytable)
library(pushshiftR)
library(httr)
library(xml2)
library(rvest)
library(purrr)
library(lubridate)
library(naniar)
library(qdapRegex)
library(qdap)
library(tm)
library(tidyr)
library(topicmodels)
library(plotly)
library(devtools)
install_github("lchiffon/wordcloud2")
library(wordcloud2)
library(lexicon)
setwd("E:/Rdata")
?profanity_zac_anger
top10_sub_2018 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(minWidth = 150,
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 60)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4a. Most Common Words per Subreddit (2018)", font_size = 14)
?grady_augmented
?get_sentiments
plotlynrc %>%
layout(legend = list(orientation = "h", y = -0.2))
reactable(SubCommentShare, filterable = TRUE, columns = list(Comments = colDef(filterable = FALSE), Share = colDef(filterable = FALSE)), defaultPageSize = 11, striped = TRUE, compact = TRUE) %>%
add_title("Table 2. Subreddit Comment Share from Total", font_size = 14)
top10_sub_2022 %>%
rename(Subreddit = subreddit, Word = word, Label = label, N = n) %>%
reactable(filterable = TRUE,
columns = list(Subreddit = colDef(minWidth = 150,
style = list(borderRight = "1px solid silver")),
N = colDef(filterable = FALSE, maxWidth = 60)), striped = TRUE, compact = TRUE) %>%
add_title("Table 3c. Most Common Words per Subreddit (2022)", font_size = 14)
top10graph_label2
IDFTable %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(across(where(is.numeric), round, 7)) %>%
reactable(filterable = TRUE,
columns = list(N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE,
style = list(borderRight = "1px solid silver")), Subreddit = colDef(minWidth = 150), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 4. Most Unique Words by Subreddit", font_size = 14)
IDFTable2 %>%
rename(Word = word, Subreddit = subreddit, Label = label, N = n, TermFrequency = tf, InverseDocumentFrequency = idf, TF_IDF = tf_idf) %>%
mutate(across(where(is.numeric), round, 7)) %>%
reactable(filterable = TRUE,
columns = list(
N = colDef(filterable = FALSE), Word = colDef(filterable = FALSE, style = list(borderRight = "1px solid silver")), Subreddit = colDef(minWidth = 150), TermFrequency = colDef(filterable = FALSE), InverseDocumentFrequency = colDef(filterable = FALSE), TF_IDF = colDef(filterable = FALSE)), striped = TRUE, compact = TRUE) %>%
add_title("Table 5. Most Unique Words by Label (and why it doesn't work)", font_size = 14)
knitr::kable(tidysub_topictable_2018, format = "html", caption = "Table 6a. Topic Words for 2018") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
knitr::kable(tidysub_topictable_2022, format = "html", caption = "Table 6b. Topic Words for 2022") %>%
column_spec(1:5, border_right = "1px solid silver") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
CommentChange
kable(CommentChange, format = "html", caption = "Table 1. Change in Comments Before and After Cleaning") %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
library(haven)
setwd("~/Data/Source")
setwd("C:\Users\miche\OneDrive\Documenti\USA\School\SPRING 2023\Thesis Workshop V2\Thesis_code\Data\Source")
setwd("C:/Users/miche/OneDrive/Documenti/USA/School/SPRING 2023/Thesis Workshop V2/Thesis_code/Data/Source")
read_dta("01_ANES_GSS_merge.dta")
GSS_ANES <- read_dta("01_ANES_GSS_merge.dta")
View(GSS_ANES)
library(dplyr)
library(tidyr)
library(magrittr)
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype,yearid,fileversion,panstat,anesid,version,V200001,V160001_orig,V200002,V200003,V200004,V200005,V200006,V200007,V200008,V200009,V200017b,V200017c,V200017d,V202013,V202014,V202022,V202023,V202024,V202025,V202026,V202027,V202028,V202029,V202031,V202032,V202033,V202352,V202470,V202504,V202541a,V202541b,V202541c,V202541d,V202541f,V202542,V202543,V202544,V202545,V202546,V202547,V202629,V202630,V202630,V202631,V202632,V202633,_merge),
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype,yearid,fileversion,panstat,anesid,version,V200001,V160001_orig,V200002,V200003,V200004,V200005,V200006,V200007,V200008,V200009,V200017b,V200017c,V200017d,V202013,V202014,V202022,V202023,V202024,V202025,V202026,V202027,V202028,V202029,V202031,V202032,V202033,V202352,V202470,V202504,V202541a,V202541b,V202541c,V202541d,V202541f,V202542,V202543,V202544,V202545,V202546,V202547,V202629,V202630,V202630,V202631,V202632,V202633, _merge),
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype, yearid, fileversion, panstat, anesid, version, V200001, V160001_orig, V200002, V200003, V200004, V200005, V200006, V200007, V200008, V200009, V200017b, V200017c, V200017d, V202013, V202014, V202022, V202023, V202024, V202025, V202026, V202027, V202028, V202029, V202031, V202032, V202033, V202352, V202470, V202504, V202541a, V202541b, V202541c, V202541d, V202541f, V202542, V202543, V202544, V202545, V202546, V202547, V202629, V202630, V202630, V202631, V202632, V202633, _merge),
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype, yearid, fileversion, panstat, anesid, version),
names_sep = "_",
names_to = c(".value", "year"))
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype, yearid, fileversion, panstat, anesid, version, V200001, V160001_orig, V200002, V200003, V200004, V200005, V200006, V200007, V200008, V200009, V200017b, V200017c, V200017d, V202013, V202014, V202022, V202023, V202024, V202025, V202026, V202027, V202028, V202029, V202031, V202032, V202033, V202352, V202470, V202504, V202541a, V202541b, V202541c, V202541d, V202541f, V202542, V202543, V202544, V202545, V202546, V202547, V202629, V202630, V202630, V202631, V202632, V202633),
names_sep = "_",
names_to = c(".value", "year"))
GSS_ANES_long <- GSS_ANES %>%
select(!c(_merge))
GSS_ANES <- read_dta("01_ANES_GSS_nomerge.dta")
library(dplyr)
library(tidyr)
library(magrittr)
GSS_ANES_long <- GSS_ANES %>%
select(!c(_merge))
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype, yearid, fileversion, panstat, anesid, version, V200001, V160001_orig, V200002, V200003, V200004, V200005, V200006, V200007, V200008, V200009, V200017b, V200017c, V200017d, V202013, V202014, V202022, V202023, V202024, V202025, V202026, V202027, V202028, V202029, V202031, V202032, V202033, V202352, V202470, V202504, V202541a, V202541b, V202541c, V202541d, V202541f, V202542, V202543, V202544, V202545, V202546, V202547, V202629, V202630, V202630, V202631, V202632, V202633),
names_sep = "_",
names_to = c(".value", "year"))
rlang::last_error()
GSS_ANES_long <- GSS_ANES %>%
pivot_longer(
cols = -c(samptype, yearid, fileversion, panstat, anesid, version, V200001, V160001_orig, V200002, V200003, V200004, V200005, V200006, V200007, V200008, V200009, V200017b, V200017c, V200017d, V202013, V202014, V202022, V202023, V202024, V202025, V202026, V202027, V202028, V202029, V202031, V202032, V202033, V202352, V202470, V202504, V202541a, V202541b, V202541c, V202541d, V202541f, V202542, V202543, V202544, V202545, V202546, V202547, V202629, V202630, V202630, V202631, V202632, V202633),
names_sep = "_",
names_to = c(".value", "year"),
names_repair = "minimal")
View(GSS_ANES_long)
